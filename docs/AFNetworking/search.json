{"Functions.html#/c:@F@AFStringFromNetworkReachabilityStatus":{"name":"AFStringFromNetworkReachabilityStatus","abstract":"<p>Returns a localized string representation of an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/AFNetworkReachabilityStatus.html\">AFNetworkReachabilityStatus</a></code> value.</p>"},"Functions.html#/c:@F@AFPercentEscapedStringFromString":{"name":"AFPercentEscapedStringFromString","abstract":"<p>Returns a percent-escaped string following RFC 3986 for a query string key or value."},"Functions.html#/c:@F@AFQueryStringFromParameters":{"name":"AFQueryStringFromParameters","abstract":"<p>A helper method to generate encoded url query parameters for appending to the end of a URL.</p>"},"Functions.html#/c:@F@AFJSONObjectByRemovingKeysWithNullValues":{"name":"AFJSONObjectByRemovingKeysWithNullValues","abstract":"<p>Recursively removes <code>NSNull</code> values from a JSON object.</p>"},"Protocols/AFURLResponseSerialization.html#/c:objc(pl)AFURLResponseSerialization(im)responseObjectForResponse:data:error:":{"name":"-responseObjectForResponse:data:error:","abstract":"<p>The response object decoded from the data associated with a specified response.</p>","parent_name":"AFURLResponseSerialization"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithFileURL:name:error:":{"name":"-appendPartWithFileURL:name:error:","abstract":"<p>Appends the HTTP header <code>Content-Disposition: file; filename=#{generated filename}; name=#{name}&quot;</code> and <code>Content-Type: #{generated mimeType}</code>, followed by the encoded file data and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithFileURL:name:fileName:mimeType:error:":{"name":"-appendPartWithFileURL:name:fileName:mimeType:error:","abstract":"<p>Appends the HTTP header <code>Content-Disposition: file; filename=#{filename}; name=#{name}&quot;</code> and <code>Content-Type: #{mimeType}</code>, followed by the encoded file data and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithInputStream:name:fileName:length:mimeType:":{"name":"-appendPartWithInputStream:name:fileName:length:mimeType:","abstract":"<p>Appends the HTTP header <code>Content-Disposition: file; filename=#{filename}; name=#{name}&quot;</code> and <code>Content-Type: #{mimeType}</code>, followed by the data from the input stream and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithFileData:name:fileName:mimeType:":{"name":"-appendPartWithFileData:name:fileName:mimeType:","abstract":"<p>Appends the HTTP header <code>Content-Disposition: file; filename=#{filename}; name=#{name}&quot;</code> and <code>Content-Type: #{mimeType}</code>, followed by the encoded file data and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithFormData:name:":{"name":"-appendPartWithFormData:name:","abstract":"<p>Appends the HTTP headers <code>Content-Disposition: form-data; name=#{name}&quot;</code>, followed by the encoded data and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)appendPartWithHeaders:body:":{"name":"-appendPartWithHeaders:body:","abstract":"<p>Appends HTTP headers, followed by the encoded data and the multipart form boundary.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFMultipartFormData.html#/c:objc(pl)AFMultipartFormData(im)throttleBandwidthWithPacketSize:delay:":{"name":"-throttleBandwidthWithPacketSize:delay:","abstract":"<p>Throttles request bandwidth by limiting the packet size and adding a delay for each chunk read from the upload stream.</p>","parent_name":"AFMultipartFormData"},"Protocols/AFURLRequestSerialization.html#/c:objc(pl)AFURLRequestSerialization(im)requestBySerializingRequest:withParameters:error:":{"name":"-requestBySerializingRequest:withParameters:error:","abstract":"<p>Returns a request with the specified parameters encoded into a copy of the original request.</p>","parent_name":"AFURLRequestSerialization"},"Protocols/AFURLRequestSerialization.html":{"name":"AFURLRequestSerialization","abstract":"<p>The <code>AFURLRequestSerialization</code> protocol is adopted by an object that encodes parameters for a specified HTTP requests. Request serializers may encode parameters as query strings, HTTP bodies, setting the appropriate HTTP header fields as necessary.</p>"},"Protocols/AFMultipartFormData.html":{"name":"AFMultipartFormData","abstract":"<p>The <code>AFMultipartFormData</code> protocol defines the methods supported by the parameter in the block argument of <code>AFHTTPRequestSerializer -multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:</code>.</p>"},"Protocols/AFURLResponseSerialization.html":{"name":"AFURLResponseSerialization","abstract":"<p>The <code>AFURLResponseSerialization</code> protocol is adopted by an object that decodes data into a more useful object representation, according to details in the server response. Response serializers may additionally perform validation on the incoming response and data.</p>"},"Enums/AFHTTPRequestQueryStringSerializationStyle.html#/c:@E@AFHTTPRequestQueryStringSerializationStyle@AFHTTPRequestQueryStringDefaultStyle":{"name":"AFHTTPRequestQueryStringDefaultStyle","abstract":"<p>Undocumented</p>","parent_name":"AFHTTPRequestQueryStringSerializationStyle"},"Enums/AFNetworkReachabilityStatus.html#/c:@E@AFNetworkReachabilityStatus@AFNetworkReachabilityStatusUnknown":{"name":"AFNetworkReachabilityStatusUnknown","abstract":"<p>Undocumented</p>","parent_name":"AFNetworkReachabilityStatus"},"Enums/AFNetworkReachabilityStatus.html#/c:@E@AFNetworkReachabilityStatus@AFNetworkReachabilityStatusNotReachable":{"name":"AFNetworkReachabilityStatusNotReachable","abstract":"<p>Undocumented</p>","parent_name":"AFNetworkReachabilityStatus"},"Enums/AFNetworkReachabilityStatus.html#/c:@E@AFNetworkReachabilityStatus@AFNetworkReachabilityStatusReachableViaWWAN":{"name":"AFNetworkReachabilityStatusReachableViaWWAN","abstract":"<p>Undocumented</p>","parent_name":"AFNetworkReachabilityStatus"},"Enums/AFNetworkReachabilityStatus.html#/c:@E@AFNetworkReachabilityStatus@AFNetworkReachabilityStatusReachableViaWiFi":{"name":"AFNetworkReachabilityStatusReachableViaWiFi","abstract":"<p>Undocumented</p>","parent_name":"AFNetworkReachabilityStatus"},"Enums/AFSSLPinningMode.html#/c:@E@AFSSLPinningMode@AFSSLPinningModeNone":{"name":"AFSSLPinningModeNone","abstract":"<p>Undocumented</p>","parent_name":"AFSSLPinningMode"},"Enums/AFSSLPinningMode.html#/c:@E@AFSSLPinningMode@AFSSLPinningModePublicKey":{"name":"AFSSLPinningModePublicKey","abstract":"<p>Undocumented</p>","parent_name":"AFSSLPinningMode"},"Enums/AFSSLPinningMode.html#/c:@E@AFSSLPinningMode@AFSSLPinningModeCertificate":{"name":"AFSSLPinningModeCertificate","abstract":"<p>Undocumented</p>","parent_name":"AFSSLPinningMode"},"Enums/AFSSLPinningMode.html":{"name":"AFSSLPinningMode","abstract":"<p>Undocumented</p>"},"Enums/AFNetworkReachabilityStatus.html":{"name":"AFNetworkReachabilityStatus","abstract":"<p>Undocumented</p>"},"Enums/AFHTTPRequestQueryStringSerializationStyle.html":{"name":"AFHTTPRequestQueryStringSerializationStyle"},"Constants.html#/c:@AFNetworkingReachabilityDidChangeNotification":{"name":"AFNetworkingReachabilityDidChangeNotification","abstract":"<p>Posted when network reachability changes."},"Constants.html#/c:@AFNetworkingReachabilityNotificationStatusItem":{"name":"AFNetworkingReachabilityNotificationStatusItem","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@AFURLRequestSerializationErrorDomain":{"name":"AFURLRequestSerializationErrorDomain","abstract":"<h2 id='error-domains' class='heading'>Error Domains</h2>"},"Constants.html#/c:@AFNetworkingOperationFailingURLRequestErrorKey":{"name":"AFNetworkingOperationFailingURLRequestErrorKey","abstract":"<h2 id='user-info-dictionary-keys' class='heading'>User info dictionary keys</h2>"},"Constants.html#/c:@kAFUploadStream3GSuggestedPacketSize":{"name":"kAFUploadStream3GSuggestedPacketSize","abstract":"<h2 id='throttling-bandwidth-for-http-request-input-streams' class='heading'>Throttling Bandwidth for HTTP Request Input Streams</h2>"},"Constants.html#/c:@kAFUploadStream3GSuggestedDelay":{"name":"kAFUploadStream3GSuggestedDelay","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@AFURLResponseSerializationErrorDomain":{"name":"AFURLResponseSerializationErrorDomain","abstract":"<h2 id='error-domains' class='heading'>Error Domains</h2>"},"Constants.html#/c:@AFNetworkingOperationFailingURLResponseErrorKey":{"name":"AFNetworkingOperationFailingURLResponseErrorKey","abstract":"<h2 id='user-info-dictionary-keys' class='heading'>User info dictionary keys</h2>"},"Constants.html#/c:@AFNetworkingOperationFailingURLResponseDataErrorKey":{"name":"AFNetworkingOperationFailingURLResponseDataErrorKey","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@AFNetworkingTaskDidResumeNotification":{"name":"AFNetworkingTaskDidResumeNotification","abstract":"<p>Posted when a task resumes.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteNotification":{"name":"AFNetworkingTaskDidCompleteNotification","abstract":"<p>Posted when a task finishes executing. Includes a userInfo dictionary with additional information about the task.</p>"},"Constants.html#/c:@AFNetworkingTaskDidSuspendNotification":{"name":"AFNetworkingTaskDidSuspendNotification","abstract":"<p>Posted when a task suspends its execution.</p>"},"Constants.html#/c:@AFURLSessionDidInvalidateNotification":{"name":"AFURLSessionDidInvalidateNotification","abstract":"<p>Posted when a session is invalidated.</p>"},"Constants.html#/c:@AFURLSessionDownloadTaskDidMoveFileSuccessfullyNotification":{"name":"AFURLSessionDownloadTaskDidMoveFileSuccessfullyNotification","abstract":"<p>Posted when a session download task finished moving the temporary download file to a specified destination successfully.</p>"},"Constants.html#/c:@AFURLSessionDownloadTaskDidFailToMoveFileNotification":{"name":"AFURLSessionDownloadTaskDidFailToMoveFileNotification","abstract":"<p>Posted when a session download task encountered an error when moving the temporary download file to a specified destination.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteResponseDataKey":{"name":"AFNetworkingTaskDidCompleteResponseDataKey","abstract":"<p>The raw response data of the task. Included in the userInfo dictionary of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@AFNetworkingTaskDidCompleteNotification\">AFNetworkingTaskDidCompleteNotification</a></code> if response data exists for the task.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteSerializedResponseKey":{"name":"AFNetworkingTaskDidCompleteSerializedResponseKey","abstract":"<p>The serialized response object of the task. Included in the userInfo dictionary of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@AFNetworkingTaskDidCompleteNotification\">AFNetworkingTaskDidCompleteNotification</a></code> if the response was serialized.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteResponseSerializerKey":{"name":"AFNetworkingTaskDidCompleteResponseSerializerKey","abstract":"<p>The response serializer used to serialize the response. Included in the userInfo dictionary of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@AFNetworkingTaskDidCompleteNotification\">AFNetworkingTaskDidCompleteNotification</a></code> if the task has an associated response serializer.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteAssetPathKey":{"name":"AFNetworkingTaskDidCompleteAssetPathKey","abstract":"<p>The file path associated with the download task. Included in the userInfo dictionary of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@AFNetworkingTaskDidCompleteNotification\">AFNetworkingTaskDidCompleteNotification</a></code> if an the response data has been stored directly to disk.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteErrorKey":{"name":"AFNetworkingTaskDidCompleteErrorKey","abstract":"<p>Any error associated with the task, or the serialization of the response. Included in the userInfo dictionary of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@AFNetworkingTaskDidCompleteNotification\">AFNetworkingTaskDidCompleteNotification</a></code> if an error exists.</p>"},"Constants.html#/c:@AFNetworkingTaskDidCompleteSessionTaskMetrics":{"name":"AFNetworkingTaskDidCompleteSessionTaskMetrics","abstract":"<p>The session task metrics taken from the download task. Included in the userInfo dictionary of the <code>AFNetworkingTaskDidCompleteSessionTaskMetrics</code></p>"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(py)baseURL":{"name":"baseURL","abstract":"<p>The URL used to construct requests from relative paths in methods like <code>requestWithMethod:URLString:parameters:</code>, and the <code>GET</code> / <code>POST</code> / et al. convenience methods.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(py)requestSerializer":{"name":"requestSerializer","abstract":"<p>Requests created with <code>requestWithMethod:URLString:parameters:</code> &amp; <code>multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:</code> are constructed with a set of default headers using a parameter serialization specified by this property. By default, this is set to an instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPRequestSerializer.html\">AFHTTPRequestSerializer</a></code>, which serializes query string parameters for <code>GET</code>, <code>HEAD</code>, and <code>DELETE</code> requests, or otherwise URL-form-encodes HTTP message bodies.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(py)responseSerializer":{"name":"responseSerializer","abstract":"<p>Responses sent from the server in data tasks created with <code>dataTaskWithRequest:success:failure:</code> and run using the <code>GET</code> / <code>POST</code> / et al. convenience methods are automatically validated and serialized by the response serializer. By default, this property is set to an instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFJSONResponseSerializer.html\">AFJSONResponseSerializer</a></code>.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(py)securityPolicy":{"name":"securityPolicy","abstract":"<p>The security policy used by created session to evaluate server trust for secure connections. <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFURLSessionManager.html\">AFURLSessionManager</a></code> uses the <code>defaultPolicy</code> unless otherwise specified. A security policy configured with <code>AFSSLPinningModePublicKey</code> or <code>AFSSLPinningModeCertificate</code> can only be applied on a session manager initialized with a secure base URL (i.e. https). Applying a security policy with pinning enabled on an insecure session manager throws an <code>Invalid Security Policy</code> exception.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(cm)manager":{"name":"+manager","abstract":"<p>Creates and returns an <code>AFHTTPSessionManager</code> object.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)initWithBaseURL:":{"name":"-initWithBaseURL:","abstract":"<p>Initializes an <code>AFHTTPSessionManager</code> object with the specified base URL.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)initWithBaseURL:sessionConfiguration:":{"name":"-initWithBaseURL:sessionConfiguration:","abstract":"<p>Initializes an <code>AFHTTPSessionManager</code> object with the specified base URL.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)GET:parameters:headers:progress:success:failure:":{"name":"-GET:parameters:headers:progress:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>GET</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)HEAD:parameters:headers:success:failure:":{"name":"-HEAD:parameters:headers:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>HEAD</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)POST:parameters:headers:progress:success:failure:":{"name":"-POST:parameters:headers:progress:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>POST</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)POST:parameters:headers:constructingBodyWithBlock:progress:success:failure:":{"name":"-POST:parameters:headers:constructingBodyWithBlock:progress:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a multipart <code>POST</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)PUT:parameters:headers:success:failure:":{"name":"-PUT:parameters:headers:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>PUT</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)PATCH:parameters:headers:success:failure:":{"name":"-PATCH:parameters:headers:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>PATCH</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)DELETE:parameters:headers:success:failure:":{"name":"-DELETE:parameters:headers:success:failure:","abstract":"<p>Creates and runs an <code>NSURLSessionDataTask</code> with a <code>DELETE</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFHTTPSessionManager.html#/c:objc(cs)AFHTTPSessionManager(im)dataTaskWithHTTPMethod:URLString:parameters:headers:uploadProgress:downloadProgress:success:failure:":{"name":"-dataTaskWithHTTPMethod:URLString:parameters:headers:uploadProgress:downloadProgress:success:failure:","abstract":"<p>Creates an <code>NSURLSessionDataTask</code> with a custom <code>HTTPMethod</code> request.</p>","parent_name":"AFHTTPSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)session":{"name":"session","abstract":"<p>The managed session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)operationQueue":{"name":"operationQueue","abstract":"<p>The operation queue on which delegate callbacks are run.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)responseSerializer":{"name":"responseSerializer","abstract":"<p>Responses sent from the server in data tasks created with <code>dataTaskWithRequest:success:failure:</code> and run using the <code>GET</code> / <code>POST</code> / et al. convenience methods are automatically validated and serialized by the response serializer. By default, this property is set to an instance of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFJSONResponseSerializer.html\">AFJSONResponseSerializer</a></code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)securityPolicy":{"name":"securityPolicy","abstract":"<p>The security policy used by created session to evaluate server trust for secure connections. <code>AFURLSessionManager</code> uses the <code>defaultPolicy</code> unless otherwise specified.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)reachabilityManager":{"name":"reachabilityManager","abstract":"<p>The network reachability manager. <code>AFURLSessionManager</code> uses the <code>sharedManager</code> by default.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)tasks":{"name":"tasks","abstract":"<p>The data, upload, and download tasks currently run by the managed session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)dataTasks":{"name":"dataTasks","abstract":"<p>The data tasks currently run by the managed session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)uploadTasks":{"name":"uploadTasks","abstract":"<p>The upload tasks currently run by the managed session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)downloadTasks":{"name":"downloadTasks","abstract":"<p>The download tasks currently run by the managed session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)completionQueue":{"name":"completionQueue","abstract":"<p>The dispatch queue for <code>completionBlock</code>. If <code>NULL</code> (default), the main queue is used.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(py)completionGroup":{"name":"completionGroup","abstract":"<p>The dispatch group for <code>completionBlock</code>. If <code>NULL</code> (default), a private dispatch group is used.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)initWithSessionConfiguration:":{"name":"-initWithSessionConfiguration:","abstract":"<p>Creates and returns a manager for a session created with the specified configuration. This is the designated initializer.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)invalidateSessionCancelingTasks:resetSession:":{"name":"-invalidateSessionCancelingTasks:resetSession:","abstract":"<p>Invalidates the managed session, optionally canceling pending tasks and optionally resets given session.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)dataTaskWithRequest:uploadProgress:downloadProgress:completionHandler:":{"name":"-dataTaskWithRequest:uploadProgress:downloadProgress:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionDataTask</code> with the specified request.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)uploadTaskWithRequest:fromFile:progress:completionHandler:":{"name":"-uploadTaskWithRequest:fromFile:progress:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionUploadTask</code> with the specified request for a local file.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)uploadTaskWithRequest:fromData:progress:completionHandler:":{"name":"-uploadTaskWithRequest:fromData:progress:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionUploadTask</code> with the specified request for an HTTP body.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)uploadTaskWithStreamedRequest:progress:completionHandler:":{"name":"-uploadTaskWithStreamedRequest:progress:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionUploadTask</code> with the specified streaming request.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)downloadTaskWithRequest:progress:destination:completionHandler:":{"name":"-downloadTaskWithRequest:progress:destination:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionDownloadTask</code> with the specified request.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)downloadTaskWithResumeData:progress:destination:completionHandler:":{"name":"-downloadTaskWithResumeData:progress:destination:completionHandler:","abstract":"<p>Creates an <code>NSURLSessionDownloadTask</code> with the specified resume data.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)uploadProgressForTask:":{"name":"-uploadProgressForTask:","abstract":"<p>Returns the upload progress of the specified task.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)downloadProgressForTask:":{"name":"-downloadProgressForTask:","abstract":"<p>Returns the download progress of the specified task.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setSessionDidBecomeInvalidBlock:":{"name":"-setSessionDidBecomeInvalidBlock:","abstract":"<p>Sets a block to be executed when the managed session becomes invalid, as handled by the <code>NSURLSessionDelegate</code> method <code>URLSession:didBecomeInvalidWithError:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setSessionDidReceiveAuthenticationChallengeBlock:":{"name":"-setSessionDidReceiveAuthenticationChallengeBlock:","abstract":"<p>Sets a block to be executed when a connection level authentication challenge has occurred, as handled by the <code>NSURLSessionDelegate</code> method <code>URLSession:didReceiveChallenge:completionHandler:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setTaskNeedNewBodyStreamBlock:":{"name":"-setTaskNeedNewBodyStreamBlock:","abstract":"<p>Sets a block to be executed when a task requires a new request body stream to send to the remote server, as handled by the <code>NSURLSessionTaskDelegate</code> method <code>URLSession:task:needNewBodyStream:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setTaskWillPerformHTTPRedirectionBlock:":{"name":"-setTaskWillPerformHTTPRedirectionBlock:","abstract":"<p>Sets a block to be executed when an HTTP request is attempting to perform a redirection to a different URL, as handled by the <code>NSURLSessionTaskDelegate</code> method <code>URLSession:willPerformHTTPRedirection:newRequest:completionHandler:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setAuthenticationChallengeHandler:":{"name":"-setAuthenticationChallengeHandler:","abstract":"<p>Sets a block to be executed when a session task has received a request specific authentication challenge, as handled by the <code>NSURLSessionTaskDelegate</code> method <code>URLSession:task:didReceiveChallenge:completionHandler:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setTaskDidSendBodyDataBlock:":{"name":"-setTaskDidSendBodyDataBlock:","abstract":"<p>Sets a block to be executed periodically to track upload progress, as handled by the <code>NSURLSessionTaskDelegate</code> method <code>URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setTaskDidCompleteBlock:":{"name":"-setTaskDidCompleteBlock:","abstract":"<p>Sets a block to be executed as the last message related to a specific task, as handled by the <code>NSURLSessionTaskDelegate</code> method <code>URLSession:task:didCompleteWithError:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setTaskDidFinishCollectingMetricsBlock:":{"name":"-setTaskDidFinishCollectingMetricsBlock:","abstract":"<p>Undocumented</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDataTaskDidReceiveResponseBlock:":{"name":"-setDataTaskDidReceiveResponseBlock:","abstract":"<p>Sets a block to be executed when a data task has received a response, as handled by the <code>NSURLSessionDataDelegate</code> method <code>URLSession:dataTask:didReceiveResponse:completionHandler:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDataTaskDidBecomeDownloadTaskBlock:":{"name":"-setDataTaskDidBecomeDownloadTaskBlock:","abstract":"<p>Sets a block to be executed when a data task has become a download task, as handled by the <code>NSURLSessionDataDelegate</code> method <code>URLSession:dataTask:didBecomeDownloadTask:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDataTaskDidReceiveDataBlock:":{"name":"-setDataTaskDidReceiveDataBlock:","abstract":"<p>Sets a block to be executed when a data task receives data, as handled by the <code>NSURLSessionDataDelegate</code> method <code>URLSession:dataTask:didReceiveData:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDataTaskWillCacheResponseBlock:":{"name":"-setDataTaskWillCacheResponseBlock:","abstract":"<p>Sets a block to be executed to determine the caching behavior of a data task, as handled by the <code>NSURLSessionDataDelegate</code> method <code>URLSession:dataTask:willCacheResponse:completionHandler:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDidFinishEventsForBackgroundURLSessionBlock:":{"name":"-setDidFinishEventsForBackgroundURLSessionBlock:","abstract":"<p>Sets a block to be executed once all messages enqueued for a session have been delivered, as handled by the <code>NSURLSessionDataDelegate</code> method <code>URLSessionDidFinishEventsForBackgroundURLSession:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDownloadTaskDidFinishDownloadingBlock:":{"name":"-setDownloadTaskDidFinishDownloadingBlock:","abstract":"<p>Sets a block to be executed when a download task has completed a download, as handled by the <code>NSURLSessionDownloadDelegate</code> method <code>URLSession:downloadTask:didFinishDownloadingToURL:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDownloadTaskDidWriteDataBlock:":{"name":"-setDownloadTaskDidWriteDataBlock:","abstract":"<p>Sets a block to be executed periodically to track download progress, as handled by the <code>NSURLSessionDownloadDelegate</code> method <code>URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFURLSessionManager.html#/c:objc(cs)AFURLSessionManager(im)setDownloadTaskDidResumeBlock:":{"name":"-setDownloadTaskDidResumeBlock:","abstract":"<p>Sets a block to be executed when a download task has been resumed, as handled by the <code>NSURLSessionDownloadDelegate</code> method <code>URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:</code>.</p>","parent_name":"AFURLSessionManager"},"Classes/AFCompoundResponseSerializer.html#/c:objc(cs)AFCompoundResponseSerializer(py)responseSerializers":{"name":"responseSerializers","abstract":"<p>The component response serializers.</p>","parent_name":"AFCompoundResponseSerializer"},"Classes/AFCompoundResponseSerializer.html#/c:objc(cs)AFCompoundResponseSerializer(cm)compoundSerializerWithResponseSerializers:":{"name":"+compoundSerializerWithResponseSerializers:","abstract":"<p>Creates and returns a compound serializer comprised of the specified response serializers.</p>","parent_name":"AFCompoundResponseSerializer"},"Classes/AFImageResponseSerializer.html#/c:objc(cs)AFImageResponseSerializer(py)imageScale":{"name":"imageScale","abstract":"<p>The scale factor used when interpreting the image data to construct <code>responseImage</code>. Specifying a scale factor of 1.0 results in an image whose size matches the pixel-based dimensions of the image. Applying a different scale factor changes the size of the image as reported by the size property. This is set to the value of scale of the main screen by default, which automatically scales images for retina displays, for instance.</p>","parent_name":"AFImageResponseSerializer"},"Classes/AFImageResponseSerializer.html#/c:objc(cs)AFImageResponseSerializer(py)automaticallyInflatesResponseImage":{"name":"automaticallyInflatesResponseImage","abstract":"<p>Whether to automatically inflate response image data for compressed formats (such as PNG or JPEG). Enabling this can significantly improve drawing performance on iOS when used with <code>setCompletionBlockWithSuccess:failure:</code>, as it allows a bitmap representation to be constructed in the background rather than on the main thread. <code>YES</code> by default.</p>","parent_name":"AFImageResponseSerializer"},"Classes/AFPropertyListResponseSerializer.html#/c:objc(cs)AFPropertyListResponseSerializer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"AFPropertyListResponseSerializer"},"Classes/AFPropertyListResponseSerializer.html#/c:objc(cs)AFPropertyListResponseSerializer(py)format":{"name":"format","abstract":"<p>The property list format. Possible values are described in &ldquo;NSPropertyListFormat&rdquo;.</p>","parent_name":"AFPropertyListResponseSerializer"},"Classes/AFPropertyListResponseSerializer.html#/c:objc(cs)AFPropertyListResponseSerializer(py)readOptions":{"name":"readOptions","abstract":"<p>The property list reading options. Possible values are described in &ldquo;NSPropertyListMutabilityOptions.&rdquo;</p>","parent_name":"AFPropertyListResponseSerializer"},"Classes/AFPropertyListResponseSerializer.html#/c:objc(cs)AFPropertyListResponseSerializer(cm)serializerWithFormat:readOptions:":{"name":"+serializerWithFormat:readOptions:","abstract":"<p>Creates and returns a property list serializer with a specified format, read options, and write options.</p>","parent_name":"AFPropertyListResponseSerializer"},"Classes/AFJSONResponseSerializer.html#/c:objc(cs)AFJSONResponseSerializer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"AFJSONResponseSerializer"},"Classes/AFJSONResponseSerializer.html#/c:objc(cs)AFJSONResponseSerializer(py)readingOptions":{"name":"readingOptions","abstract":"<p>Options for reading the response JSON data and creating the Foundation objects. For possible values, see the <code>NSJSONSerialization</code> documentation section &ldquo;NSJSONReadingOptions&rdquo;. <code>0</code> by default.</p>","parent_name":"AFJSONResponseSerializer"},"Classes/AFJSONResponseSerializer.html#/c:objc(cs)AFJSONResponseSerializer(py)removesKeysWithNullValues":{"name":"removesKeysWithNullValues","abstract":"<p>Whether to remove keys with <code>NSNull</code> values from response JSON. Defaults to <code>NO</code>.</p>","parent_name":"AFJSONResponseSerializer"},"Classes/AFJSONResponseSerializer.html#/c:objc(cs)AFJSONResponseSerializer(cm)serializerWithReadingOptions:":{"name":"+serializerWithReadingOptions:","abstract":"<p>Creates and returns a JSON serializer with specified reading and writing options.</p>","parent_name":"AFJSONResponseSerializer"},"Classes/AFHTTPResponseSerializer.html#/c:objc(cs)AFHTTPResponseSerializer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"AFHTTPResponseSerializer"},"Classes/AFHTTPResponseSerializer.html#/c:objc(cs)AFHTTPResponseSerializer(cm)serializer":{"name":"+serializer","abstract":"<p>Creates and returns a serializer with default configuration.</p>","parent_name":"AFHTTPResponseSerializer"},"Classes/AFHTTPResponseSerializer.html#/c:objc(cs)AFHTTPResponseSerializer(py)acceptableStatusCodes":{"name":"acceptableStatusCodes","abstract":"<p>The acceptable HTTP status codes for responses. When non-<code>nil</code>, responses with status codes not contained by the set will result in an error during validation.</p>","parent_name":"AFHTTPResponseSerializer"},"Classes/AFHTTPResponseSerializer.html#/c:objc(cs)AFHTTPResponseSerializer(py)acceptableContentTypes":{"name":"acceptableContentTypes","abstract":"<p>The acceptable MIME types for responses. When non-<code>nil</code>, responses with a <code>Content-Type</code> with MIME types that do not intersect with the set will result in an error during validation.</p>","parent_name":"AFHTTPResponseSerializer"},"Classes/AFHTTPResponseSerializer.html#/c:objc(cs)AFHTTPResponseSerializer(im)validateResponse:data:error:":{"name":"-validateResponse:data:error:","abstract":"<p>Validates the specified response and data.</p>","parent_name":"AFHTTPResponseSerializer"},"Classes/AFPropertyListRequestSerializer.html#/c:objc(cs)AFPropertyListRequestSerializer(py)format":{"name":"format","abstract":"<p>The property list format. Possible values are described in &ldquo;NSPropertyListFormat&rdquo;.</p>","parent_name":"AFPropertyListRequestSerializer"},"Classes/AFPropertyListRequestSerializer.html#/c:objc(cs)AFPropertyListRequestSerializer(py)writeOptions":{"name":"writeOptions","abstract":"<div class=\"aside aside-warning\">","parent_name":"AFPropertyListRequestSerializer"},"Classes/AFPropertyListRequestSerializer.html#/c:objc(cs)AFPropertyListRequestSerializer(cm)serializerWithFormat:writeOptions:":{"name":"+serializerWithFormat:writeOptions:","abstract":"<p>Creates and returns a property list serializer with a specified format, read options, and write options.</p>","parent_name":"AFPropertyListRequestSerializer"},"Classes/AFJSONRequestSerializer.html#/c:objc(cs)AFJSONRequestSerializer(py)writingOptions":{"name":"writingOptions","abstract":"<p>Options for writing the request JSON data from Foundation objects. For possible values, see the <code>NSJSONSerialization</code> documentation section &ldquo;NSJSONWritingOptions&rdquo;. <code>0</code> by default.</p>","parent_name":"AFJSONRequestSerializer"},"Classes/AFJSONRequestSerializer.html#/c:objc(cs)AFJSONRequestSerializer(cm)serializerWithWritingOptions:":{"name":"+serializerWithWritingOptions:","abstract":"<p>Creates and returns a JSON serializer with specified reading and writing options.</p>","parent_name":"AFJSONRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)stringEncoding":{"name":"stringEncoding","abstract":"<p>The string encoding used to serialize parameters. <code>NSUTF8StringEncoding</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)allowsCellularAccess":{"name":"allowsCellularAccess","abstract":"<p>Whether created requests can use the device’s cellular radio (if present). <code>YES</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)cachePolicy":{"name":"cachePolicy","abstract":"<p>The cache policy of created requests. <code>NSURLRequestUseProtocolCachePolicy</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)HTTPShouldHandleCookies":{"name":"HTTPShouldHandleCookies","abstract":"<p>Whether created requests should use the default cookie handling. <code>YES</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)HTTPShouldUsePipelining":{"name":"HTTPShouldUsePipelining","abstract":"<p>Whether created requests can continue transmitting data before receiving a response from an earlier transmission. <code>NO</code> by default</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)networkServiceType":{"name":"networkServiceType","abstract":"<p>The network service type for created requests. <code>NSURLNetworkServiceTypeDefault</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)timeoutInterval":{"name":"timeoutInterval","abstract":"<p>The timeout interval, in seconds, for created requests. The default timeout interval is 60 seconds.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)HTTPRequestHeaders":{"name":"HTTPRequestHeaders","abstract":"<p>Default HTTP header field values to be applied to serialized requests. By default, these include the following:</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(cm)serializer":{"name":"+serializer","abstract":"<p>Creates and returns a serializer with default configuration.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)setValue:forHTTPHeaderField:":{"name":"-setValue:forHTTPHeaderField:","abstract":"<p>Sets the value for the HTTP headers set in request objects made by the HTTP client. If <code>nil</code>, removes the existing value for that header.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)valueForHTTPHeaderField:":{"name":"-valueForHTTPHeaderField:","abstract":"<p>Returns the value for the HTTP headers set in the request serializer.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)setAuthorizationHeaderFieldWithUsername:password:":{"name":"-setAuthorizationHeaderFieldWithUsername:password:","abstract":"<p>Sets the &ldquo;Authorization&rdquo; HTTP header set in request objects made by the HTTP client to a basic authentication value with Base64-encoded username and password. This overwrites any existing value for this header.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)clearAuthorizationHeader":{"name":"-clearAuthorizationHeader","abstract":"<p>Clears any existing value for the &ldquo;Authorization&rdquo; HTTP header.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(py)HTTPMethodsEncodingParametersInURI":{"name":"HTTPMethodsEncodingParametersInURI","abstract":"<p>HTTP methods for which serialized requests will encode parameters as a query string. <code>GET</code>, <code>HEAD</code>, and <code>DELETE</code> by default.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)setQueryStringSerializationWithStyle:":{"name":"-setQueryStringSerializationWithStyle:","abstract":"<p>Set the method of query string serialization according to one of the pre-defined styles.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)setQueryStringSerializationWithBlock:":{"name":"-setQueryStringSerializationWithBlock:","abstract":"<p>Set the a custom method of query string serialization according to the specified block.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)requestWithMethod:URLString:parameters:error:":{"name":"-requestWithMethod:URLString:parameters:error:","abstract":"<p>Creates an <code>NSMutableURLRequest</code> object with the specified HTTP method and URL string.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:":{"name":"-multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:","abstract":"<p>Creates an <code>NSMutableURLRequest</code> object with the specified HTTP method and URLString, and constructs a <code>multipart/form-data</code> HTTP body, using the specified parameters and multipart form data block. See <a href=\"http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.2\">http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.2</a></p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFHTTPRequestSerializer.html#/c:objc(cs)AFHTTPRequestSerializer(im)requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler:":{"name":"-requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler:","abstract":"<p>Creates an <code>NSMutableURLRequest</code> by removing the <code>HTTPBodyStream</code> from a request, and asynchronously writing its contents into the specified file, invoking the completion handler when finished.</p>","parent_name":"AFHTTPRequestSerializer"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(py)networkReachabilityStatus":{"name":"networkReachabilityStatus","abstract":"<p>The current network reachability status.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(py)reachable":{"name":"reachable","abstract":"<p>Whether or not the network is currently reachable.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(py)reachableViaWWAN":{"name":"reachableViaWWAN","abstract":"<p>Whether or not the network is currently reachable via WWAN.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(py)reachableViaWiFi":{"name":"reachableViaWiFi","abstract":"<p>Whether or not the network is currently reachable via WiFi.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>Returns the shared network reachability manager.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(cm)manager":{"name":"+manager","abstract":"<p>Creates and returns a network reachability manager with the default socket address.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(cm)managerForDomain:":{"name":"+managerForDomain:","abstract":"<p>Creates and returns a network reachability manager for the specified domain.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(cm)managerForAddress:":{"name":"+managerForAddress:","abstract":"<p>Creates and returns a network reachability manager for the socket address.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)initWithReachability:":{"name":"-initWithReachability:","abstract":"<p>Initializes an instance of a network reachability manager from the specified reachability object.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(cm)new":{"name":"+new","abstract":"<p>Unavailable initializer</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)init":{"name":"-init","abstract":"<p>Unavailable initializer</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)startMonitoring":{"name":"-startMonitoring","abstract":"<p>Starts monitoring for changes in network reachability status.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)stopMonitoring":{"name":"-stopMonitoring","abstract":"<p>Stops monitoring for changes in network reachability status.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)localizedNetworkReachabilityStatusString":{"name":"-localizedNetworkReachabilityStatusString","abstract":"<p>Returns a localized string representation of the current network reachability status.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFNetworkReachabilityManager.html#/c:objc(cs)AFNetworkReachabilityManager(im)setReachabilityStatusChangeBlock:":{"name":"-setReachabilityStatusChangeBlock:","abstract":"<p>Sets a callback to be executed when the network availability of the <code>baseURL</code> host changes.</p>","parent_name":"AFNetworkReachabilityManager"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(py)SSLPinningMode":{"name":"SSLPinningMode","abstract":"<p>The criteria by which server trust should be evaluated against the pinned SSL certificates. Defaults to <code>AFSSLPinningModeNone</code>.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(py)pinnedCertificates":{"name":"pinnedCertificates","abstract":"<p>The certificates used to evaluate server trust according to the SSL pinning mode. </p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(py)allowInvalidCertificates":{"name":"allowInvalidCertificates","abstract":"<p>Whether or not to trust servers with an invalid or expired SSL certificates. Defaults to <code>NO</code>.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(py)validatesDomainName":{"name":"validatesDomainName","abstract":"<p>Whether or not to validate the domain name in the certificate&rsquo;s CN field. Defaults to <code>YES</code>.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(cm)certificatesInBundle:":{"name":"+certificatesInBundle:","abstract":"<p>Returns any certificates included in the bundle. If you are using AFNetworking as an embedded framework, you must use this method to find the certificates you have included in your app bundle, and use them when creating your security policy by calling <code>policyWithPinningMode:withPinnedCertificates</code>.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(cm)defaultPolicy":{"name":"+defaultPolicy","abstract":"<p>Returns the shared default security policy, which does not allow invalid certificates, validates domain name, and does not validate against pinned certificates or public keys.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(cm)policyWithPinningMode:":{"name":"+policyWithPinningMode:","abstract":"<p>Creates and returns a security policy with the specified pinning mode.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(cm)policyWithPinningMode:withPinnedCertificates:":{"name":"+policyWithPinningMode:withPinnedCertificates:","abstract":"<p>Creates and returns a security policy with the specified pinning mode.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html#/c:objc(cs)AFSecurityPolicy(im)evaluateServerTrust:forDomain:":{"name":"-evaluateServerTrust:forDomain:","abstract":"<p>Whether or not the specified server trust should be accepted, based on the security policy.</p>","parent_name":"AFSecurityPolicy"},"Classes/AFSecurityPolicy.html":{"name":"AFSecurityPolicy","abstract":"<p><code>AFSecurityPolicy</code> evaluates server trust against pinned X.509 certificates and public keys over secure connections.</p>"},"Classes/AFNetworkReachabilityManager.html":{"name":"AFNetworkReachabilityManager","abstract":"<p><code>AFNetworkReachabilityManager</code> monitors the reachability of domains, and addresses for both WWAN and WiFi network interfaces.</p>"},"Classes/AFHTTPRequestSerializer.html":{"name":"AFHTTPRequestSerializer","abstract":"<p><code>AFHTTPRequestSerializer</code> conforms to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AFURLRequestSerialization.html\">AFURLRequestSerialization</a></code> &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AFURLResponseSerialization.html\">AFURLResponseSerialization</a></code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>"},"Classes/AFJSONRequestSerializer.html":{"name":"AFJSONRequestSerializer","abstract":"<p><code>AFJSONRequestSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPRequestSerializer.html\">AFHTTPRequestSerializer</a></code> that encodes parameters as JSON using <code>NSJSONSerialization</code>, setting the <code>Content-Type</code> of the encoded request to <code>application/json</code>.</p>"},"Classes/AFPropertyListRequestSerializer.html":{"name":"AFPropertyListRequestSerializer","abstract":"<p><code>AFPropertyListRequestSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPRequestSerializer.html\">AFHTTPRequestSerializer</a></code> that encodes parameters as JSON using <code>NSPropertyListSerializer</code>, setting the <code>Content-Type</code> of the encoded request to <code>application/x-plist</code>.</p>"},"Classes/AFHTTPResponseSerializer.html":{"name":"AFHTTPResponseSerializer","abstract":"<p><code>AFHTTPResponseSerializer</code> conforms to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AFURLRequestSerialization.html\">AFURLRequestSerialization</a></code> &amp; <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/AFURLResponseSerialization.html\">AFURLResponseSerialization</a></code> protocols, offering a concrete base implementation of query string / URL form-encoded parameter serialization and default request headers, as well as response status code and content type validation.</p>"},"Classes/AFJSONResponseSerializer.html":{"name":"AFJSONResponseSerializer","abstract":"<p><code>AFJSONResponseSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> that validates and decodes JSON responses.</p>"},"Classes.html#/c:objc(cs)AFXMLParserResponseSerializer":{"name":"AFXMLParserResponseSerializer","abstract":"<p><code>AFXMLParserResponseSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> that validates and decodes XML responses as an <code>NSXMLParser</code> objects.</p>"},"Classes/AFPropertyListResponseSerializer.html":{"name":"AFPropertyListResponseSerializer","abstract":"<p><code>AFPropertyListResponseSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> that validates and decodes XML responses as an <code>NSXMLDocument</code> objects.</p>"},"Classes/AFImageResponseSerializer.html":{"name":"AFImageResponseSerializer","abstract":"<p><code>AFImageResponseSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> that validates and decodes image responses.</p>"},"Classes/AFCompoundResponseSerializer.html":{"name":"AFCompoundResponseSerializer","abstract":"<p><code>AFCompoundSerializer</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> that delegates the response serialization to the first <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code> object that returns an object for <code>responseObjectForResponse:data:error:</code>, falling back on the default behavior of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFHTTPResponseSerializer.html\">AFHTTPResponseSerializer</a></code>. This is useful for supporting multiple potential types and structures of server responses with a single serializer.</p>"},"Classes/AFURLSessionManager.html":{"name":"AFURLSessionManager","abstract":"<p><code>AFURLSessionManager</code> creates and manages an <code>NSURLSession</code> object based on a specified <code>NSURLSessionConfiguration</code> object, which conforms to <code>&lt;NSURLSessionTaskDelegate&gt;</code>, <code>&lt;NSURLSessionDataDelegate&gt;</code>, <code>&lt;NSURLSessionDownloadDelegate&gt;</code>, and <code>&lt;NSURLSessionDelegate&gt;</code>.</p>"},"Classes/AFHTTPSessionManager.html":{"name":"AFHTTPSessionManager","abstract":"<p><code>AFHTTPSessionManager</code> is a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/AFURLSessionManager.html\">AFURLSessionManager</a></code> with convenience methods for making HTTP requests. When a <code>baseURL</code> is provided, requests made with the <code>GET</code> / <code>POST</code> / et al. convenience methods can be made with relative paths.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}